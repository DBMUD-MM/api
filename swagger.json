swagger: '2.0'
info:
  title: Crewmeister API
  description: Move your app forward with the Crewmeister API
  version: "2.0.0"
# the domain of the service
host: crewmeister.com
# array of all schemes that your API supports
schemes:
  - https
# will be prefixed to all paths
basePath: /api/v2
produces:
  - application/json
paths:
  /crew/{crew_id}/time-tracking/stamp-chains:
    delete:
      operationId: deleteStampChain
      description: |
        Deletes all related stamps for for a given timestamp (dateTime).
      tags: 
        - Time Tracking
        - Not implemented yet
      parameters:
        - $ref: '#/parameters/crew_id_in_path'
        - $ref: '#/parameters/timestamp'
        - name: userId
          in: query
          description: The id of the user for whom the stamp chain should be deleted. Defaults to the authenticated user_id when this parameter is not given.
          required: false
          type: integer
      responses:
        200:
          description: The stamp chain was deleted
          schema:
            type: object
            properties:
              message:
                type: string
                description: A status message.
              status_code:  
                type: integer
                description: A unique status code.
    post:
      tags: 
        - Time Tracking
        - Not implemented yet
      summary: Create multiple correlated stamps.
      parameters:
        - $ref: '#/parameters/crew_id_in_path'
        - name: userId
          in: query
          description: The id of the user for whom the stamp chain should be created. Defaults to the authenticated user_id when this parameter is not given.
          required: false
          type: integer
        - name: payload
          in: body
          schema:
            type: array
            items:
              $ref: '#/definitions/Stamp'
      responses: 
        200: 
          description: An array of stamps
          schema:
            type: object
            properties:
              message:
                type: string
                description: A simple status message.
              status_code:  
                type: integer
                description: A unique status code.
              payload: 
                type: array
                items:
                  $ref: '#/definitions/Stamp'
                  
  /crew/{crew_id}/time-tracking/durations:
    get:
      summary: Time tracking durations
      description: |
        The duration endpoint gives access to *weighted* time tracking values in crewmeister (eg. for use in statistics).
      tags: 
        - Time Tracking
        - Statistics
      parameters:
        - $ref: '#/parameters/crew_id_in_path'
        - $ref: '#/parameters/start_time'
        - $ref: '#/parameters/end_time'
        - $ref: '#/parameters/user_id_filter'
        - $ref: '#/parameters/group_id_filter'
        - name: groupBy
          in: query
          description: The entities on which the durations should be grouped by. If one wants to get all time durations for a user, he should group by user. Valid options are "group_id" and "user_id".
          type: string
          required: false
          format: comma-separated-list
        - name: granularity
          in: query
          description: | 
            The time granularity on which durations should be grouped by. 
            If the paramter is none or unset the api responds the weighted time tracking durations for a given date range (start_time, end_time) without splitting the durations by a given granularity.
          required: false
          type: string
          enum:
            - none
            - day
            - week
            - month
      responses:
        200:
          description: An array different durations
          schema:
            type: object
            properties:
              message:
                type: string
                description: A simple status message.
              status_code:  
                type: integer
                description: A unique status code.
              payload: 
                type: array
                items:
                  $ref: '#/definitions/Duration'
  
  /crew/{crew_id}/time-tracking/stamps:
    get:
      summary: Time tracking stamps
      description: |
        The stamps endpoint responds information about the raw/unweighted time trackings of a given crew. Stamps containing the same *clockInTimestamp* attribute belong to one *stamp-chain*.
      parameters:
        - $ref: '#/parameters/crew_id_in_path'
        - $ref: '#/parameters/start_time'
        - $ref: '#/parameters/end_time'
        - $ref: '#/parameters/user_id_filter'
        - name: timestamp
          in: query
          description: |
            Warning! This parameter might change it's behaviour in the future. (Use startTime == endTime == date to get a chain of stamps for a point in time)
            In the early days of crewmeister it was possible to have multiple overlapping work time periods at the same time. In some cases this leads to unexpected behaviour. If one wants to render the current work time status (eg. mini-app) and there are overlapping work time periods the client doesn't know which one to pick. In this case the one period with a stop work stamp will overrule all other work time periods for the given timestamp.
          required: false
          type: boolean
      tags:
        - Time Tracking
      responses:
        200:
          description: An array of stamps
          schema:
            type: object
            properties:
              message:
                type: string
                description: A simple status message.
              status_code:  
                type: integer
                description: A unique status code.
              payload: 
                type: array
                items:
                  $ref: '#/definitions/Stamp'     

  /prices/config:
    get:
      summary: Get the configuration for the price calculator
      tags:
        - Payment
      responses:
        200:
          description: An object containing all known products and crew sizes
          schema:
            type: object
            properties:
              message:
                type: string
                description: A simple status message.
              status_code:  
                type: integer
                description: A unique status code.
                example: 200
              payload: 
                type: object
                properties:
                  products: 
                    type: array
                    items: 
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: "Vacation planner"
                  crew_sizes: 
                    type: array
                    items: 
                      type: object
                      properties:
                        max:
                          type: integer
                          example: 10
                        name:
                          type: string
                          example: "1-10"

      
  /prices/calculate:
    get:
      summary: Calculate a product price
      description: |
        Given the relevant attributes for a crewmeister subscription, it returns the final price and details how it was calculated, includung individual prices and optional discounts.
      parameters:
        - name: product_ids
          in: query
          type: array
          description: The selected products
          items: 
            type: integer
        - name: crew_size
          in: query
          type: integer
          description: Number of crew members
        - name: payment_period
          in: query
          type: string
          description: The selected payment period, monthly or yearly
          enum:
            - monthly
            - yearly
        - name: voucher_code
          in: query
          type: string
          description: An optional voucher code (provides discounts)
          required: false
      tags:
        - Payment
      responses:
        200:
          description: A price calculation result object
          schema:
            type: object
            properties:
              message:
                type: string
                description: A simple status message.
              status_code:  
                type: integer
                description: A unique status code.
                example: 200
              payload: 
                type: object
                properties:
                  products: 
                    type: array
                    items: 
                       $ref: '#/definitions/PaymentProduct'
                  firstPeriod:
                    $ref: '#/definitions/PaymentPeriodPrice'
                  recurringPeriod:
                    $ref: '#/definitions/PaymentPeriodPrice'
parameters:
  crew_id_in_path:
    name: crew_id
    in: path
    type: integer
    required: true
  timestamp: 
    name: timestamp
    in: query
    description: An iso timestamp
    required: false
    type: string
    format: comma-separated-list
  user_id_filter:
    name: userIds
    in: query
    description: A comma seperated list of user_ids which should be filtered. If parameter is missing this filter won't be applied.
    required: false
    type: string
    format: comma-separated-list
  group_id_filter:
    name: groupIds
    in: query
    description: A comma seperated list of group_ids which should be filtered. If parameter is missing this filter won't be applied.
    required: false
    type: string
    format: comma-separated-list 
  start_time:
    name: startTime
    in: query
    description: Start time from where the stamps should be fetched.
    required: false
    type: string
    format: time
  end_time:
    name: endTime
    in: query
    description: End time from where the stamps should be fetched.
    required: false
    type: string
    format: time

definitions:
  PaymentPeriodPrice:
    type: object
    properties:
      finalPrice:
        type: string
        example: "20,92"
      discounts: 
        type: array
        items:
          $ref: '#/definitions/PaymentDiscount'
  PaymentDiscount:
    type: object
    properties:
      name: 
        type: string
        example: "Jährliche Zahlung"
      amount:
        type: string
        example: "2,00"
  PaymentProduct:
    type: object
    properties:
      name: 
        type: string
        example: "Zeiterfassung"
      amount:
        type: string
        example: "12,12"

  Stamp:
    type: object
    properties:
      timeAccount:
        type: integer
        description: The time account.
      timestamp: 
        type: string
        description: ISO8601
      note: 
        type: string
        description: A note
      groupId:
        type: integer
        description: The group id
      location: 
        type: string
        description: A note
      clockInTimestamp:
        type: string
        description: ISO8601
      userId: 
        type: integer
        description: The group id
        
  Duration:
    type: object
    properties:
      type:
        type: string
        description: The type of the duration (grouped_by, total).
        enum:
          - total
          - grouped_by
      index: 
        type: integer
        description: The array index or offset of the duration from the given start date. If no duration was found in the given granuarity and time period, the duration isn't returned from the server.
      value: 
        type: string
        description: ISO8601 duration string
      groupBy:
       type: object
       properties:
         userId: 
           type: integer
         groupId: 
           type: integer
           
